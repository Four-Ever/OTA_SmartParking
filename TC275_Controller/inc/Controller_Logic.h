/**********************************************************************************************************************
 * \file Controller_Logic.h
 * \copyright Copyright (C) Infineon Technologies AG 2019
 * 
 * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of 
 * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
 * are agreed, use of this file is subject to following:
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and 
 * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
 * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all 
 * derivative works of the Software, unless such copies or derivative works are solely in the form of 
 * machine-executable object code generated by a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE 
 * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
 * IN THE SOFTWARE.
 *********************************************************************************************************************/

#ifndef CONTROLLER_LOGIC_H_
#define CONTROLLER_LOGIC_H_

/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
#include "Ifx_Types.h"
#include "IfxVadc.h"
#include "IfxVadc_Adc.h"
#include "Common_def.h"
#include "Message.h"





/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*------------------------------------------------------Macros-------------------------------------------------------*/
//#define BEFORE_RECEIVE_TEST
//#define PERIOD_VER


/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*-------------------------------------------------Global variables--------------------------------------------------*/

//ADC.c
extern ButtonState g_btn_adc_result;
extern sint8 g_SH_adc_result;

//Logic.c//Logic.c
extern DriveDir dir_state;
extern ControllerState g_current_ctrl_state;
extern OUR_signal local_udt_req_sig;
extern OUS_signal local_udt_state_sig;
extern PS_signal local_prk_status_sig;
extern VS_signal local_vhc_status_sig;
extern TruthState g_isreq_reject ;
extern uint32 g_reset_timer;

//OTA_state.c
extern OTAUpdateState g_current_ota_update;


extern uint8 here;
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*-------------------------------------------------Data Structures---------------------------------------------------*/
typedef struct
{
    IfxVadc_Adc vadc; /* VADC handle */
    IfxVadc_Adc_Group adcGroup;
    IfxVadc_GroupId adcGroupId;
    uint32 chnIx;
} Vadc_t;

/*********************************************************************************************************************/
 
/*********************************************************************************************************************/
/*--------------------------------------------Private Variables/Constants--------------------------------------------*/


/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*------------------------------------------------Function Prototypes------------------------------------------------*/



//ADC.c
void init_Btn_Adc();
void init_Steering_Wheel();

uint8 get_SH_data(void);
uint8 get_btn_data(void);

//OTA_State.c
void Show_OTA_Confirm_State();
void Show_OTA_State();

//OFF_State.c
void Show_Off_State();

//Drive_State.c
void Show_Drive_State();
void Show_Auto_Parking_State();

//Logic.c
void Control_Current_State();
void init_Controller();
/*********************************************************************************************************************/


#endif /* CONTROLLER_LOGIC_H_ */
