/**********************************************************************************************************************
 * \file OurCan.h
 * \copyright Copyright (C) Infineon Technologies AG 2019
 *
 * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of
 * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
 * are agreed, use of this file is subject to following:
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and
 * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
 * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are solely in the form of
 * machine-executable object code generated by a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *********************************************************************************************************************/

#ifndef OURCAN_H_
#define OURCAN_H_

/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
#include "OurCan_message.h"
#include "IfxMultican_Can.h"
#include "IfxPort_PinMap.h"
#include "IfxPort.h"
#include "Ifx_Types.h"
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*------------------------------------------------------Macros-------------------------------------------------------*/

// CAN �끂�뱶 諛� 硫붿떆吏� �빖�뱾�윭 �꽑�뼵
#define CAN_TX_MESSAGE_ID 0x100
#define CAN_RX_MESSAGE_ID 0x123

// CAN RXTX �젙�쓽
#define TC275_CAN0 IfxMultican_SrcId_0
#define CAN0_RX IfxMultican_RXD0B_P20_7_IN
#define CAN0_TX IfxMultican_TXD0_P20_8_OUT

#define EIGHTBYTE_F 0xFFFFFFFFFFFFFFFF
#define FOURBYTE_F 0xFFFFFFFF

/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*-------------------------------------------------Global variables--------------------------------------------------*/

/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*-------------------------------------------------Data Structures---------------------------------------------------*/
typedef struct
{
        VCU_Vehicle_Status_Msg VCU_Vehicle_Status;
        VCU_Parking_Status_Msg VCU_Parking_Status;
        VCU_Vehicle_Engine_Status_Msg VCU_Vehicle_Engine_Status;
        VCU_Camera_Msg  VCU_Camera;
        VCU_Exiting_Status_Msg VCU_Exiting_Status;
        VCU_ParkingLane_Request_Msg VCU_ParkingLane_Request;
        SCU_Obstacle_Detection_Msg SCU_Obstacle_Detection;
        CGW_OTA_File_Size_Msg CGW_OTA_File_Size;
        CGW_OTA_File_Data_Msg CGW_OTA_File_Data;
        CGW_OTA_Control_Msg CGW_OTA_Control;
        CCU_Cordi_data1_Msg CCU_Cordi_data1;
        CCU_Cordi_data2_Msg CCU_Cordi_data2;
        CCU_RightAngle_detect_Msg CCU_RightAngle_detect;
        CCU_ParkingAngle_detect_Msg CCU_ParkingAngle_detect;
        CCU_Parking_Complete_Msg CCU_Parking_Complete;
        CGW_Engine_Msg CGW_Engine;
        CGW_Move_Msg CGW_Move;
        CGW_Auto_Parking_Request_Msg CGW_Auto_Parking_Request;
        CGW_Off_Request_Msg CGW_Off_Request;
        CTRL_Engine_Msg CTRL_Engine;
        CTRL_Move_Msg CTRL_Move;
        CTRL_Auto_Parking_Request_Msg CTRL_Auto_Parking_Request;
        CTRL_Off_Request_Msg CTRL_Off_Request;

} DBMessages;

extern DBMessages db_msg;

typedef struct
{
        uint8 VCU_Vehicle_Status_Flag : 1;
        uint8 VCU_Parking_Status_Flag : 1;
        uint8 VCU_Vehicle_Engine_Status_Flag : 1;
        uint8 VCU_Camera_Flag : 1;
        uint8 VCU_Exiting_Status_Flag : 1;
        uint8 VCU_ParkingLane_Request_Flag : 1;
        uint8 SCU_Obstacle_Detection_Flag : 1;
        uint8 CGW_OTA_File_Size_Flag : 1;
        uint8 CGW_OTA_File_Data_Flag : 1;
        uint8 CGW_OTA_Control_Flag : 1;
        uint8 CCU_Cordi_data1_Flag : 1;
        uint8 CCU_Cordi_data2_Flag : 1;
        uint8 CCU_RightAngle_detect_Flag : 1;
        uint8 CCU_ParkingAngle_detect_Flag : 1;
        uint8 CCU_Parking_Complete_Flag : 1;
        uint8 CGW_Engine_Flag : 1;
        uint8 CGW_Move_Flag : 1;
        uint8 CGW_Auto_Parking_Request_Flag : 1;
        uint8 CGW_Off_Request_Flag : 1;
        uint8 CTRL_Engine_Flag : 1;
        uint8 CTRL_Move_Flag : 1;
        uint8 CTRL_Auto_Parking_Request_Flag : 1;
        uint8 CTRL_Off_Request_Flag : 1;

} DBFlag;

extern DBFlag db_flag;

// Transmission �뿴嫄고삎 (��臾몄옄濡� 蹂�寃�)
typedef enum
{
    PARKING = 0,
    DRIVING = 1,
    REVERSE = 2
} Transmission;

// EngineState �뿴嫄고삎 (��臾몄옄濡� 蹂�寃�)
typedef enum
{
    ENGINE_OFF = 0,
    ENGINE_ON = 1
} EngineState;

// Mode �뿴嫄고삎 (��臾몄옄濡� 蹂�寃�)
typedef enum
{
    SYSTEM_DRIVE_MODE = 0,
    USER_DRIVE_MODE = 1
} Mode;

// ParkingStatus �뿴嫄고삎 (��臾몄옄濡� 蹂�寃�)
typedef enum
{
    SERCHING = 0,
    POSITIONING = 1, // 二쇱감 怨듦컙 �씤�떇 �썑 �쟾吏꾪븯�뒗 �긽�깭
    REVERSING = 2,   // �썑吏� 二쇱감 以�
    PARKED = 3       // 二쇱감 �셿猷�
} ParkingStatus;


typedef struct
{
    Mode user_mode;
    float32 ref_rpm;
    float32 ref_vel;

    sint32 cur_rpm;
    float32 cur_vel;

    uint8 u8_velocity;
    sint8 steering_angle;
    Transmission transmission;
    ParkingStatus parking_status;
    EngineState engine_state;
}VehicleStatus;

extern VehicleStatus vehicle_status;


/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*--------------------------------------------Private Variables/Constants--------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*------------------------------------------------Function Prototypes------------------------------------------------*/
void initCanDB(void);
void output_message(void *msg, uint32 msgID);
void output_message_test(int cnt);
void initCan(void);
/*********************************************************************************************************************/

#endif /* OURCAN_H_ */
