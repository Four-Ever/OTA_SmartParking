/**********************************************************************************************************************
 * \file OTA.h
 * \copyright Copyright (C) Infineon Technologies AG 2019
 * 
 * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of 
 * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
 * are agreed, use of this file is subject to following:
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and 
 * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
 * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all 
 * derivative works of the Software, unless such copies or derivative works are solely in the form of 
 * machine-executable object code generated by a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE 
 * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
 * IN THE SOFTWARE.
 *********************************************************************************************************************/

#ifndef OTA_H_
#define OTA_H_
#include "IfxMultican_Can.h"

/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/
typedef enum {
    FW_UPDATE_IDLE,
    FW_UPDATE_REQUESTED,
    FW_UPDATE_IN_PROGRESS,
    FW_UPDATE_COMPLETE
} FirmwareUpdateStat_t;
/*********************************************************************************************************************/
/*------------------------------------------------------Macros-------------------------------------------------------*/
/*********************************************************************************************************************/
#define BOOT_FLAG_ADDR        0xAF000000  // 데이터 플래시 시작 주소
#define APPLICATION_A_ADDRESS 0xA0100000 /*Partition A address */
#define APPLICATION_B_ADDRESS 0xA0180000 /*Partition B address */
#define BOOT_FLAG_A 0x00000001 /* Partition A flag */
#define BOOT_FLAG_B 0x00000002 /* Partition B flag */
#define MESSAGE_BUFFER_SIZE 512

#define PFLASH_PAGE_LENGTH          IFXFLASH_PFLASH_PAGE_LENGTH /* 0x20 = 32 Bytes (smallest unit that can be
                                                                 * programmed in the Program Flash memory (PFLASH)) */
#define PROGRAM_FLASH_0             IfxFlash_FlashType_P0       /* Define the Program Flash Bank to be used         */
/*********************************************************************************************************************/
/*-------------------------------------------------Global variables--------------------------------------------------*/
/*********************************************************************************************************************/
extern FirmwareUpdateStat_t fwUpdateState;
extern volatile uint8 fwUpdateRequested;
extern volatile uint8 fwUpdateComplete;
extern uint32 fwUpdateAddress;
extern uint32 fwUpdateSize;
extern uint32 fwUpdateReceivedBytes;

extern IfxMultican_Message messageBuffer[MESSAGE_BUFFER_SIZE];

extern volatile uint16 messageBufferHead;
extern volatile uint16 messageBufferTail;
extern uint32 currentUpdateAddr;
extern uint8 temp;

/*********************************************************************************************************************/
/*-------------------------------------------------Data Structures---------------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*--------------------------------------------Private Variables/Constants--------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*------------------------------------------------Function Prototypes------------------------------------------------*/
/*********************************************************************************************************************/
uint32 GetBootFlag(void);
void SetBootFlag(void);

uint8 MessageBufferIsFull(void);
uint8 MessageBufferIsEmpty(void);
void MessageBufferPut(IfxMultican_Message* msg);
void MessageBufferGet(IfxMultican_Message* msg);

void StartFirmwareUpdate(void);
void FirmwareUpdateStateMachine(void);

#endif /* OTA_H_ */
